// <auto-generated />
using System;
using DataAccessLayer;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccessLayer.Migrations
{
    [DbContext(typeof(EmployeeManagerAssingmentDbContext))]
    [Migration("20230309230436_Seed")]
    partial class Seed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DataAccessLayer.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("CompletedTaskCouner")
                        .HasColumnType("int");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("EmployerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("dc4f1f74-2dc7-4f38-aac9-435036a86036"),
                            CompletedTaskCouner = 0,
                            ConfirmPassword = "employee",
                            DateOfBirth = new DateTime(2020, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "employee@gmail.com",
                            EmployerId = new Guid("21f06ca6-348e-40b8-8fa1-ef5f2866ecb5"),
                            Name = "Test Employee",
                            Password = "employee",
                            PhoneNumber = "0879899248",
                            Salary = 123m
                        },
                        new
                        {
                            Id = new Guid("b71ca60c-073b-4579-8068-3bd32a3b20ba"),
                            CompletedTaskCouner = 0,
                            ConfirmPassword = "employee",
                            DateOfBirth = new DateTime(2021, 3, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "employee1@gmail.com",
                            EmployerId = new Guid("739f25f0-70a2-45ea-94a2-4ae4711669d4"),
                            Name = "Test Employee 2",
                            Password = "employee",
                            PhoneNumber = "0879899248",
                            Salary = 123m
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.Employer", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateOfBirth")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(12)
                        .HasColumnType("nvarchar(12)");

                    b.Property<decimal>("Salary")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Employers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("21f06ca6-348e-40b8-8fa1-ef5f2866ecb5"),
                            ConfirmPassword = "admin",
                            DateOfBirth = new DateTime(2023, 3, 10, 1, 4, 36, 809, DateTimeKind.Local).AddTicks(8055),
                            Email = "admin@gmail.com",
                            Name = "Test Admin",
                            Password = "admin",
                            PhoneNumber = "0879899248",
                            Salary = 1234m
                        },
                        new
                        {
                            Id = new Guid("739f25f0-70a2-45ea-94a2-4ae4711669d4"),
                            ConfirmPassword = "admin",
                            DateOfBirth = new DateTime(2023, 3, 10, 1, 4, 36, 809, DateTimeKind.Local).AddTicks(8118),
                            Email = "admin1@gmail.com",
                            Name = "Test Admin 2",
                            Password = "admin",
                            PhoneNumber = "0879899248",
                            Salary = 12345m
                        });
                });

            modelBuilder.Entity("DataAccessLayer.Entities.TaskWork", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("AssigneeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateTime?>("DueDate")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDone")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("Id");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = new Guid("60c77ad4-db0b-4406-acde-9e0d0eac9921"),
                            AssigneeId = new Guid("dc4f1f74-2dc7-4f38-aac9-435036a86036"),
                            Description = "LONG TEXT up to 150",
                            DueDate = new DateTime(2023, 8, 21, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsDone = false,
                            Title = "Example Test Task"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
